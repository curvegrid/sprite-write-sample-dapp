const path = require('path');

const doSleep = false;
const sleepTime = 3000;

function sleep(ms) {
  console.log(`\nSleeping for ${ms}ms...\n`);
  return new Promise((resolve) => setTimeout(resolve, ms));
}

// Retrieve and process the config file
const CONFIG_FILE = path.join(__dirname, `../deployment-config.${process.env.HARDHAT_NETWORK || 'development'}`);
const { config } = require(CONFIG_FILE);
const hsmAddress = config.hsmAddress;

const sprites = [
  // sun and field
  '000000000000000000000b0b0b0b0b0b00000000000b0b0b0b000b0b0b0b0b0b000000000000000000000b0b0b0b0b0b00000000000000000b000b0b0b0b0b0b00000000000000000b00000b0b0b0b0b000000000000000b00000b0000000b0b000000000000000000000b0000000000000000000000000000000b0000000b00000000000000000000000b0000000b0000000000000000000000000000000b0000000e000000000e000000000000000000000e000e0e000e00000e0e0e0000002a2a0e2a2a0e2a0e2a2a0e2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a0e2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a2a',

  // TNT


  // Curvegrid logo


  // blue smiley face
  '00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d0d00000000000d0d000000000000000d0d00000000000d0d000000000000000000000000000000000000000000000000000000000000000000000000000d000000000000000000000d0d0000000d00000000000000000000000d0000000d00000000000000000000000d0000000d00000000000000000000000d0000000d0d0000000000000000000d0d000000000d0d000000000000000d0d0000000000000d0d0d0d0000000d0d000000000000000000000d0d0d0d0d00000000',

  // fox


  // rock on!


  // heart

];

async function main() {
  const accounts = await hre.ethers.getSigners();
  const deployer = accounts[0];

  const spriteWrite = await hre.mbDeployer.deploy(deployer, 'SpriteWrite', [], {
    addressLabel: 'sprite_write',
    contractLabel: 'sprite_write',
  });

  console.log(`Deployed SpriteWrite.sol to ${spriteWrite.mbAddress.address}`);

  await spriteWrite.contract.grantRole(spriteWrite.contract.MINTER_ROLE(), hsmAddress);

  // Mint some sprites
  for (let i = 0; i < sprites.length; i++) {
    const sprite = sprites[i];
    await spriteWrite.contract.safeMint(sprite, deployer.address);
    if (doSleep) await sleep(sleepTime);
  }

  if (doSleep) await sleep(sleepTime);
}

// We recommend this pattern to be able to use async/await everywhere
// and properly handle errors.
main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error(error);
    process.exit(1);
  });
